# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest
    env:
      MIX_ENV: 'test'

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17.2' # [Required] Define the Elixir version
        otp-version: '26.0'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        id: "cache-deps"
        path: |
          deps
          _build
        key: test-${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: test-${{ runner.os }}-mix-
    - name: Install dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: mix deps.get
    - name: Set up database
      run: mix ash.setup
    - name: Run tests
      run: mix test --max-failures 1 --trace --warnings-as-errors