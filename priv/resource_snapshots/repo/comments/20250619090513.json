{
  "attributes": [
    {
      "allow_nil?": false,
      "default": "fragment(\"gen_random_uuid()\")",
      "generated?": false,
      "precision": null,
      "primary_key?": true,
      "references": null,
      "scale": null,
      "size": null,
      "source": "id",
      "type": "uuid"
    },
    {
      "allow_nil?": false,
      "default": "nil",
      "generated?": false,
      "precision": null,
      "primary_key?": false,
      "references": null,
      "scale": null,
      "size": null,
      "source": "body",
      "type": "text"
    },
    {
      "allow_nil?": false,
      "default": "\"internal\"",
      "generated?": false,
      "precision": null,
      "primary_key?": false,
      "references": null,
      "scale": null,
      "size": null,
      "source": "visibility",
      "type": "text"
    },
    {
      "allow_nil?": false,
      "default": "fragment(\"(now() AT TIME ZONE 'utc')\")",
      "generated?": false,
      "precision": null,
      "primary_key?": false,
      "references": null,
      "scale": null,
      "size": null,
      "source": "inserted_at",
      "type": "utc_datetime_usec"
    },
    {
      "allow_nil?": false,
      "default": "fragment(\"(now() AT TIME ZONE 'utc')\")",
      "generated?": false,
      "precision": null,
      "primary_key?": false,
      "references": null,
      "scale": null,
      "size": null,
      "source": "updated_at",
      "type": "utc_datetime_usec"
    },
    {
      "allow_nil?": true,
      "default": "nil",
      "generated?": false,
      "precision": null,
      "primary_key?": false,
      "references": {
        "deferrable": false,
        "destination_attribute": "id",
        "destination_attribute_default": null,
        "destination_attribute_generated": null,
        "index?": false,
        "match_type": null,
        "match_with": null,
        "multitenancy": {
          "attribute": null,
          "global": null,
          "strategy": null
        },
        "name": "comments_case_id_fkey",
        "on_delete": "delete",
        "on_update": "update",
        "primary_key?": true,
        "schema": "public",
        "table": "cases"
      },
      "scale": null,
      "size": null,
      "source": "case_id",
      "type": "uuid"
    },
    {
      "allow_nil?": true,
      "default": "nil",
      "generated?": false,
      "precision": null,
      "primary_key?": false,
      "references": {
        "deferrable": false,
        "destination_attribute": "id",
        "destination_attribute_default": null,
        "destination_attribute_generated": null,
        "index?": false,
        "match_type": null,
        "match_with": null,
        "multitenancy": {
          "attribute": null,
          "global": null,
          "strategy": null
        },
        "name": "comments_alert_id_fkey",
        "on_delete": "delete",
        "on_update": "update",
        "primary_key?": true,
        "schema": "public",
        "table": "alerts"
      },
      "scale": null,
      "size": null,
      "source": "alert_id",
      "type": "uuid"
    },
    {
      "allow_nil?": false,
      "default": "nil",
      "generated?": false,
      "precision": null,
      "primary_key?": false,
      "references": {
        "deferrable": false,
        "destination_attribute": "id",
        "destination_attribute_default": null,
        "destination_attribute_generated": null,
        "index?": false,
        "match_type": null,
        "match_with": null,
        "multitenancy": {
          "attribute": null,
          "global": null,
          "strategy": null
        },
        "name": "comments_user_id_fkey",
        "on_delete": null,
        "on_update": null,
        "primary_key?": true,
        "schema": "public",
        "table": "users"
      },
      "scale": null,
      "size": null,
      "source": "user_id",
      "type": "uuid"
    }
  ],
  "base_filter": null,
  "check_constraints": [],
  "custom_indexes": [],
  "custom_statements": [
    {
      "code?": false,
      "down": "DROP FUNCTION IF EXISTS cleanup_case_views_on_comment_delete();",
      "name": "cleanup_case_views_function",
      "up": "CREATE OR REPLACE FUNCTION cleanup_case_views_on_comment_delete()\nRETURNS TRIGGER AS $$\nBEGIN\n  -- Delete case_views for the same case_id and visibility as the deleted comment\n  DELETE FROM case_views\n  WHERE case_id = OLD.case_id\n    AND visibility = OLD.visibility;\n\n  RETURN OLD;\nEND;\n$$ LANGUAGE plpgsql;\n"
    },
    {
      "code?": false,
      "down": "DROP TRIGGER IF EXISTS trigger_cleanup_case_views_on_comment_delete ON comments;",
      "name": "cleanup_case_views_trigger",
      "up": "CREATE TRIGGER trigger_cleanup_case_views_on_comment_delete\n  AFTER DELETE ON comments\n  FOR EACH ROW\n  EXECUTE FUNCTION cleanup_case_views_on_comment_delete();\n"
    }
  ],
  "has_create_action": true,
  "hash": "6A3FAFC6247AB24F258521C6980AE3D297123346048E819B1A005D5DA13F8BBD",
  "identities": [],
  "multitenancy": {
    "attribute": null,
    "global": null,
    "strategy": null
  },
  "repo": "Elixir.CaseManager.Repo",
  "schema": null,
  "table": "comments"
}