defmodule CaseManager.Repo.Migrations.AddApiKeyAuth do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:api_keys, primary_key: false) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      add(:api_key_hash, :binary, null: false)
      add(:expires_at, :utc_datetime_usec, null: false)
      add(:user_id, references(:users, column: :id, name: "api_keys_user_id_fkey", type: :uuid, prefix: "public"))
    end

    create unique_index(:api_keys, [:api_key_hash], name: "api_keys_unique_api_key_index")

    alter table(:alerts) do
      modify(:additional_data, :map, default: %{})
    end

    create unique_index(:alerts, [:alert_id, :company_id], name: "alerts_unique_alert_per_company_index")
  end

  def down do
    drop_if_exists(unique_index(:alerts, [:alert_id, :company_id], name: "alerts_unique_alert_per_company_index"))

    alter table(:alerts) do
      modify(:additional_data, :map, default: nil)
    end

    drop_if_exists(unique_index(:api_keys, [:api_key_hash], name: "api_keys_unique_api_key_index"))

    drop(constraint(:api_keys, "api_keys_user_id_fkey"))

    drop(table(:api_keys))
  end
end
