defmodule CaseManager.Repo.Migrations.AddCascadeDeleteToCaseAlerts do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop(constraint(:case_alerts, "case_alerts_alert_id_fkey"))

    drop(constraint(:case_alerts, "case_alerts_case_id_fkey"))

    alter table(:case_alerts) do
      modify(
        :case_id,
        references(:cases,
          column: :id,
          name: "case_alerts_case_id_fkey",
          type: :uuid,
          prefix: "public",
          on_delete: :delete_all,
          on_update: :update_all
        )
      )

      modify(
        :alert_id,
        references(:alerts,
          column: :id,
          name: "case_alerts_alert_id_fkey",
          type: :uuid,
          prefix: "public",
          on_delete: :delete_all,
          on_update: :update_all
        )
      )
    end
  end

  def down do
    drop(constraint(:case_alerts, "case_alerts_case_id_fkey"))

    drop(constraint(:case_alerts, "case_alerts_alert_id_fkey"))

    alter table(:case_alerts) do
      modify(
        :alert_id,
        references(:alerts, column: :id, name: "case_alerts_alert_id_fkey", type: :uuid, prefix: "public")
      )

      modify(:case_id, references(:cases, column: :id, name: "case_alerts_case_id_fkey", type: :uuid, prefix: "public"))
    end
  end
end
