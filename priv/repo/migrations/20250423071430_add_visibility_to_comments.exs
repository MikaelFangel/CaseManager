defmodule CaseManager.Repo.Migrations.AddVisibilityToComments do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop(constraint("case_alerts", "case_alerts_pkey"))

    alter table(:comments) do
      add(:visibility, :text, null: false, default: "internal")
    end

    alter table(:cases) do
      modify(:status, :text, default: "new")
    end

    alter table(:case_alerts) do
      remove(:updated_at)
      remove(:inserted_at)
      modify(:alert_id, :uuid, primary_key: true)
      modify(:case_id, :uuid, primary_key: true)
      remove(:id)
    end
  end

  def down do
    drop(constraint("case_alerts", "case_alerts_pkey"))

    alter table(:case_alerts) do
      add(:id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true)
      modify(:case_id, :uuid, primary_key: false)
      modify(:alert_id, :uuid, primary_key: false)
      add(:inserted_at, :utc_datetime_usec, null: false, default: fragment("(now() AT TIME ZONE 'utc')"))
      add(:updated_at, :utc_datetime_usec, null: false, default: fragment("(now() AT TIME ZONE 'utc')"))
    end

    alter table(:cases) do
      modify(:status, :text, default: nil)
    end

    alter table(:comments) do
      remove(:visibility)
    end
  end
end
